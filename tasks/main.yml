---
# tasks file for ansible-network.config_store
#
- name: "validate required setting: config_store_scm_url"
  fail:
    msg: "missing required argument: config_store_scm_url"
  when: config_store_scm_url is undefined

- name: remove local repository (if necessary)
  file:
    path: "{{ config_store_working_dir }}"
    state: absent
  run_once: yes
  when: not config_store_keep_local_repo

- name: invoke network provider get_config function
  include_role:
    name: "{{ ansible_network_provider }}"
    tasks_from: get_config

- name: validate configuration exists
  fail:
    msg: "missing required hostvar: configuration"
  when: configuration is not defined

- name: create clone of existing git repository
  git:
    repo: "{{ config_store_scm_url }}"
    dest: "{{ config_store_working_dir }}"
    remote: "{{ config_store_remote_name }}"
    version: "{{ config_store_version }}"
  run_once: yes
  changed_when: False

- name: configure local git repository
  git_config:
    name: "{{ item.key }}"
    repo: "{{ config_store_working_dir }}"
    scope: local
    value: "{{ item.value }}"
  run_once: yes
  changed_when: False
  loop:
    - { key: user.name, value: "{{ config_store_committer_name }}" }
    - { key: user.email, value: "{{ config_store_committer_email }}" }

- name: validate required directories exist
  file:
    path: "{{ config_store_working_dir }}/{{ ansible_network_os }}"
    state: directory
  changed_when: False

- name: copy content into local git repository
  copy:
    content: "{{ configuration }}"
    dest: "{{ config_store_working_dir }}/{{ ansible_network_os }}/{{ inventory_hostname_short }}"
  register: config_store_copy
  notify:
    - commit local changes
    - push local to remote

- name: trigger local repository remove handler
  command: /bin/true
  run_once: yes
  notify: remove local repo
  when: not config_store_keep_local_repo
